{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { PropTypes } from 'prop-types';\nimport Draw from 'leaflet-draw'; // eslint-disable-line\n\nimport isEqual from 'fast-deep-equal';\nimport React, { useRef } from 'react';\nimport { useLeafletContext } from '@react-leaflet/core';\nimport leaflet, { Map, Control } from 'leaflet';\nvar eventHandlers = {\n  onEdited: 'draw:edited',\n  onDrawStart: 'draw:drawstart',\n  onDrawStop: 'draw:drawstop',\n  onDrawVertex: 'draw:drawvertex',\n  onEditStart: 'draw:editstart',\n  onEditMove: 'draw:editmove',\n  onEditResize: 'draw:editresize',\n  onEditVertex: 'draw:editvertex',\n  onEditStop: 'draw:editstop',\n  onDeleted: 'draw:deleted',\n  onDeleteStart: 'draw:deletestart',\n  onDeleteStop: 'draw:deletestop'\n};\n\nfunction EditControl(props) {\n  var context = useLeafletContext();\n  var drawRef = useRef();\n  var propsRef = useRef(props);\n\n  var onDrawCreate = function onDrawCreate(e) {\n    var onCreated = props.onCreated;\n    var container = context.layerContainer || context.map;\n    container.addLayer(e.layer);\n    onCreated && onCreated(e);\n  };\n\n  React.useEffect(function () {\n    var map = context.map;\n    var onMounted = props.onMounted;\n\n    for (var key in eventHandlers) {\n      map.on(eventHandlers[key], function (evt) {\n        var handlers = Object.keys(eventHandlers).filter(function (handler) {\n          return eventHandlers[handler] === evt.type;\n        });\n\n        if (handlers.length === 1) {\n          var handler = handlers[0];\n          props[handler] && props[handler](evt);\n        }\n      });\n    }\n\n    map.on(leaflet.Draw.Event.CREATED, onDrawCreate);\n    drawRef.current = createDrawElement(props, context);\n    map.addControl(drawRef.current);\n    onMounted && onMounted(drawRef.current);\n    return function () {\n      map.off(leaflet.Draw.Event.CREATED, onDrawCreate);\n\n      for (var _key in eventHandlers) {\n        if (props[_key]) {\n          map.off(eventHandlers[_key], props[_key]);\n        }\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (isEqual(props.draw, propsRef.current.draw) && isEqual(props.edit, propsRef.current.edit) && props.position === propsRef.current.position) {\n      return false;\n    }\n\n    var map = context.map;\n    drawRef.current.remove(map);\n    drawRef.current = createDrawElement(props, context);\n    drawRef.current.addTo(map);\n    var onMounted = props.onMounted;\n    onMounted && onMounted(drawRef.current);\n    return null;\n  }, [props.draw, props.edit, props.position]);\n  return null;\n}\n\nfunction createDrawElement(props, context) {\n  var layerContainer = context.layerContainer;\n  var draw = props.draw,\n      edit = props.edit,\n      position = props.position;\n  var options = {\n    edit: _objectSpread(_objectSpread({}, edit), {}, {\n      featureGroup: layerContainer\n    })\n  };\n\n  if (draw) {\n    options.draw = _objectSpread({}, draw);\n  }\n\n  if (position) {\n    options.position = position;\n  }\n\n  return new Control.Draw(options);\n}\n\nEditControl.propTypes = _objectSpread(_objectSpread({}, Object.keys(eventHandlers).reduce(function (acc, val) {\n  acc[val] = PropTypes.func;\n  return acc;\n}, {})), {}, {\n  onCreated: PropTypes.func,\n  onMounted: PropTypes.func,\n  draw: PropTypes.shape({\n    polyline: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    polygon: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    rectangle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    circle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    marker: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n  }),\n  edit: PropTypes.shape({\n    edit: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    remove: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    poly: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    allowIntersection: PropTypes.bool\n  }),\n  position: PropTypes.oneOf(['topright', 'topleft', 'bottomright', 'bottomleft']),\n  leaflet: PropTypes.shape({\n    map: PropTypes.instanceOf(Map),\n    layerContainer: PropTypes.shape({\n      addLayer: PropTypes.func.isRequired,\n      removeLayer: PropTypes.func.isRequired\n    })\n  })\n});\nexport default EditControl;","map":{"version":3,"sources":["F:/bilqis/project - Copy/client/node_modules/react-leaflet-draw/dist/esm/EditControl.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","PropTypes","Draw","isEqual","React","useRef","useLeafletContext","leaflet","Map","Control","eventHandlers","onEdited","onDrawStart","onDrawStop","onDrawVertex","onEditStart","onEditMove","onEditResize","onEditVertex","onEditStop","onDeleted","onDeleteStart","onDeleteStop","EditControl","props","context","drawRef","propsRef","onDrawCreate","e","onCreated","container","layerContainer","map","addLayer","layer","useEffect","onMounted","on","evt","handlers","handler","type","Event","CREATED","current","createDrawElement","addControl","off","_key","draw","edit","position","remove","addTo","options","featureGroup","propTypes","reduce","acc","val","func","shape","polyline","oneOfType","bool","polygon","rectangle","circle","marker","poly","allowIntersection","oneOf","instanceOf","isRequired","removeLayer"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PropTypes } from 'prop-types';\nimport Draw from 'leaflet-draw'; // eslint-disable-line\n\nimport isEqual from 'fast-deep-equal';\nimport React, { useRef } from 'react';\nimport { useLeafletContext } from '@react-leaflet/core';\nimport leaflet, { Map, Control } from 'leaflet';\nvar eventHandlers = {\n  onEdited: 'draw:edited',\n  onDrawStart: 'draw:drawstart',\n  onDrawStop: 'draw:drawstop',\n  onDrawVertex: 'draw:drawvertex',\n  onEditStart: 'draw:editstart',\n  onEditMove: 'draw:editmove',\n  onEditResize: 'draw:editresize',\n  onEditVertex: 'draw:editvertex',\n  onEditStop: 'draw:editstop',\n  onDeleted: 'draw:deleted',\n  onDeleteStart: 'draw:deletestart',\n  onDeleteStop: 'draw:deletestop'\n};\n\nfunction EditControl(props) {\n  var context = useLeafletContext();\n  var drawRef = useRef();\n  var propsRef = useRef(props);\n\n  var onDrawCreate = function onDrawCreate(e) {\n    var onCreated = props.onCreated;\n    var container = context.layerContainer || context.map;\n    container.addLayer(e.layer);\n    onCreated && onCreated(e);\n  };\n\n  React.useEffect(function () {\n    var map = context.map;\n    var onMounted = props.onMounted;\n\n    for (var key in eventHandlers) {\n      map.on(eventHandlers[key], function (evt) {\n        var handlers = Object.keys(eventHandlers).filter(function (handler) {\n          return eventHandlers[handler] === evt.type;\n        });\n\n        if (handlers.length === 1) {\n          var handler = handlers[0];\n          props[handler] && props[handler](evt);\n        }\n      });\n    }\n\n    map.on(leaflet.Draw.Event.CREATED, onDrawCreate);\n    drawRef.current = createDrawElement(props, context);\n    map.addControl(drawRef.current);\n    onMounted && onMounted(drawRef.current);\n    return function () {\n      map.off(leaflet.Draw.Event.CREATED, onDrawCreate);\n\n      for (var _key in eventHandlers) {\n        if (props[_key]) {\n          map.off(eventHandlers[_key], props[_key]);\n        }\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (isEqual(props.draw, propsRef.current.draw) && isEqual(props.edit, propsRef.current.edit) && props.position === propsRef.current.position) {\n      return false;\n    }\n\n    var map = context.map;\n    drawRef.current.remove(map);\n    drawRef.current = createDrawElement(props, context);\n    drawRef.current.addTo(map);\n    var onMounted = props.onMounted;\n    onMounted && onMounted(drawRef.current);\n    return null;\n  }, [props.draw, props.edit, props.position]);\n  return null;\n}\n\nfunction createDrawElement(props, context) {\n  var layerContainer = context.layerContainer;\n  var draw = props.draw,\n      edit = props.edit,\n      position = props.position;\n  var options = {\n    edit: _objectSpread(_objectSpread({}, edit), {}, {\n      featureGroup: layerContainer\n    })\n  };\n\n  if (draw) {\n    options.draw = _objectSpread({}, draw);\n  }\n\n  if (position) {\n    options.position = position;\n  }\n\n  return new Control.Draw(options);\n}\n\nEditControl.propTypes = _objectSpread(_objectSpread({}, Object.keys(eventHandlers).reduce(function (acc, val) {\n  acc[val] = PropTypes.func;\n  return acc;\n}, {})), {}, {\n  onCreated: PropTypes.func,\n  onMounted: PropTypes.func,\n  draw: PropTypes.shape({\n    polyline: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    polygon: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    rectangle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    circle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    marker: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n  }),\n  edit: PropTypes.shape({\n    edit: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    remove: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    poly: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    allowIntersection: PropTypes.bool\n  }),\n  position: PropTypes.oneOf(['topright', 'topleft', 'bottomright', 'bottomleft']),\n  leaflet: PropTypes.shape({\n    map: PropTypes.instanceOf(Map),\n    layerContainer: PropTypes.shape({\n      addLayer: PropTypes.func.isRequired,\n      removeLayer: PropTypes.func.isRequired\n    })\n  })\n});\nexport default EditControl;"]},"metadata":{},"sourceType":"module"}