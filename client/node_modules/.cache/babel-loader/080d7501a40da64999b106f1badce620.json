{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Program\\\\Teammate\\\\project\\\\client\\\\src\\\\components\\\\maps.js\",\n    _s = $RefreshSig$();\n\nimport \"leaflet/dist/leaflet.css\";\nimport { FeatureGroup } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport L from \"leaflet/dist/leaflet\";\nimport { useEffect } from \"react\";\nimport Axious from \"../../node_modules/axios\";\nimport { icon, marker } from \"leaflet\";\nimport { Marker } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar layerGroup = L.layerGroup([]);\n\nvar saveToDatabase = function saveToDatabase() {\n  var namaMisi = prompt(\"enter mission name\");\n  Axious.post(\"http://localhost:3001/\", {\n    namaMisi: namaMisi,\n    geoJSON: JSON.stringify(layerGroup.toGeoJSON())\n  });\n};\n\nfunction Map() {\n  _s();\n\n  var centerCoor = [-7.770905, 110.377637];\n  useEffect(function () {\n    var mymap = L.map(\"mapid\", {\n      center: centerCoor,\n      zoom: 18\n    });\n    L.tileLayer(\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGF2aWVlbmJpaSIsImEiOiJja3dlY2xubzUwM2VoMzFwbWJ0OTFtbmx4In0.GLTaBJJrhb5ZQVP2fsZYhw\", {\n      attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n      maxZoom: 20,\n      id: \"mapbox/satellite-v9\",\n      tileSize: 512,\n      zoomOffset: -1,\n      accessToken: \"pk.eyJ1IjoibGF2aWVlbmJpaSIsImEiOiJja3dlY2xubzUwM2VoMzFwbWJ0OTFtbmx4In0.GLTaBJJrhb5ZQVP2fsZYhw\"\n    }).addTo(mymap);\n    var drawnItems = new L.FeatureGroup();\n    mymap.addLayer(drawnItems);\n    var drawControl = new L.Control.Draw({\n      edit: {\n        featureGroup: drawnItems\n      }\n    });\n    mymap.addControl(drawControl);\n    var modifiedDraw = L.drawLocal.extend({\n      draw: {\n        toolbar: {\n          buttons: {\n            polygon: 'Draw an awesome polygon'\n          }\n        }\n      }\n    });\n    var toolbar = L.Toolbar();\n    toolbar.addToolbar(mymap); //TODO: icon\n\n    var myIcon = L.icon({\n      iconUrl: \"https://upload.wikimedia.org/wikipedia/commons/8/88/Map_marker.svg\",\n      iconSize: [25, 45],\n      iconAnchor: [25, 45]\n    });\n    var polyline = L.polyline([], {\n      color: \"red\"\n    });\n    layerGroup.addLayer(polyline).addTo(mymap); // event click map\n\n    mymap.on(\"click\", function (e) {\n      var _e$latlng = e.latlng,\n          lat = _e$latlng.lat,\n          lng = _e$latlng.lng;\n      polyline.addLatLng([lat, lng]);\n      layerGroup.addLayer(L.marker([lat, lng], {\n        icon: myIcon\n      }));\n    });\n    document.addEventListener(\"keypress\", function (e) {\n      if (e.code === \"Space\") {\n        polyline.remove(mymap);\n        layerGroup.remove(mymap);\n      }\n    });\n    return function () {\n      mymap.off();\n      mymap.remove();\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapid\",\n      style: {\n        width: \"100%\",\n        height: \"600px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveToDatabase,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/My Program/Teammate/project/client/src/components/maps.js"],"names":["FeatureGroup","EditControl","L","useEffect","Axious","icon","marker","Marker","layerGroup","saveToDatabase","namaMisi","prompt","post","geoJSON","JSON","stringify","toGeoJSON","Map","centerCoor","mymap","map","center","zoom","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","addTo","drawnItems","addLayer","drawControl","Control","Draw","edit","featureGroup","addControl","modifiedDraw","drawLocal","extend","draw","toolbar","buttons","polygon","Toolbar","addToolbar","myIcon","iconUrl","iconSize","iconAnchor","polyline","color","on","e","latlng","lat","lng","addLatLng","document","addEventListener","code","remove","off","width","height"],"mappings":"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","sourcesContent":["import \"leaflet/dist/leaflet.css\";\r\nimport { FeatureGroup } from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport L from \"leaflet/dist/leaflet\";\r\nimport { useEffect } from \"react\";\r\nimport Axious from \"../../node_modules/axios\";\r\nimport { icon, marker } from \"leaflet\";\r\nimport { Marker } from \"react-leaflet\";\r\n\r\nconst layerGroup = L.layerGroup([]);\r\n\r\nconst saveToDatabase = () => {\r\n  let namaMisi = prompt(\"enter mission name\");\r\n  Axious.post(\"http://localhost:3001/\", {\r\n    namaMisi: namaMisi,\r\n    geoJSON: JSON.stringify(layerGroup.toGeoJSON()),\r\n  });\r\n};\r\n\r\nfunction Map() {\r\n  const centerCoor = [-7.770905, 110.377637];\r\n\r\n  useEffect(() => {\r\n    const mymap = L.map(\"mapid\", {\r\n      center: centerCoor,\r\n      zoom: 18,\r\n    });\r\n\r\n    L.tileLayer(\r\n      \"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGF2aWVlbmJpaSIsImEiOiJja3dlY2xubzUwM2VoMzFwbWJ0OTFtbmx4In0.GLTaBJJrhb5ZQVP2fsZYhw\",\r\n      {\r\n        attribution:\r\n          'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        maxZoom: 20,\r\n        id: \"mapbox/satellite-v9\",\r\n        tileSize: 512,\r\n        zoomOffset: -1,\r\n        accessToken:\r\n          \"pk.eyJ1IjoibGF2aWVlbmJpaSIsImEiOiJja3dlY2xubzUwM2VoMzFwbWJ0OTFtbmx4In0.GLTaBJJrhb5ZQVP2fsZYhw\",\r\n      }\r\n    ).addTo(mymap);\r\n\r\n    const drawnItems = new L.FeatureGroup();\r\n    mymap.addLayer(drawnItems);\r\n    const drawControl = new L.Control.Draw({\r\n        edit: {\r\n            featureGroup: drawnItems\r\n        }\r\n    });\r\n    mymap.addControl(drawControl);\r\n    const modifiedDraw = L.drawLocal.extend({\r\n      draw: {\r\n         toolbar: {\r\n            buttons: {\r\n               polygon: 'Draw an awesome polygon'\r\n            }\r\n         }\r\n      }\r\n    });\r\n    const toolbar = L.Toolbar();\r\n    toolbar.addToolbar(mymap);\r\n\r\n    //TODO: icon\r\n    const myIcon = L.icon({\r\n      iconUrl: \"https://upload.wikimedia.org/wikipedia/commons/8/88/Map_marker.svg\",\r\n      iconSize: [25, 45],\r\n      iconAnchor: [25, 45],\r\n    });\r\n\r\n    const polyline = L.polyline([], { color: \"red\" });\r\n    layerGroup.addLayer(polyline).addTo(mymap);\r\n\r\n    // event click map\r\n    mymap.on(\"click\", (e) => {\r\n      const { lat, lng } = e.latlng;\r\n      polyline.addLatLng([lat, lng]);\r\n      layerGroup.addLayer(L.marker([lat, lng], { icon: myIcon }));\r\n    });\r\n\r\n    document.addEventListener(\"keypress\", (e) => {\r\n      if (e.code === \"Space\") {\r\n        polyline.remove(mymap);\r\n        layerGroup.remove(mymap);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      mymap.off();\r\n      mymap.remove();\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id=\"mapid\" style={{ width: \"100%\", height: \"600px\"}}></div><br/>\r\n      <button onClick={saveToDatabase}>Create</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}