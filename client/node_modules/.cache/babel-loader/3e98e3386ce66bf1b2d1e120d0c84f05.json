{"ast":null,"code":"import _toConsumableArray from \"D:/My Program/Teammate/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/My Program/Teammate/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\My Program\\\\Teammate\\\\project\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Map from \"./components/maps\";\nimport MyMap from \"./components/viewMap\";\nimport { useState, useEffect } from \"react\";\nimport Axious from \"../node_modules/axios\";\nimport \"leaflet/dist/leaflet.css\";\nimport { LayerGroup } from \"leaflet\";\nimport React from 'react';\nimport { Link } from \"@material-ui/core\";\nimport { FeatureGroup } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      namaMisi = _useState2[0],\n      setNamaMisi = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      geoJSON = _useState4[0],\n      setGeoJSON = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      missionList = _useState6[0],\n      setMissionList = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newMissionName = _useState8[0],\n      setNewMissionName = _useState8[1];\n\n  var _useState9 = useState([])(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      geoJsonData = _useState10[0],\n      setGeoJsonData = _useState10[1];\n\n  useEffect(function () {\n    Axious.get(\"http://localhost:3001/\").then(function (response) {\n      setMissionList(response.data);\n    });\n  }, []);\n\n  var createMission = function createMission() {\n    Axious.post(\"http://localhost:3001/\", {\n      namaMisi: namaMisi,\n      geoJSON: geoJSON\n    });\n    setMissionList([].concat(_toConsumableArray(missionList), [{\n      namaMisi: namaMisi,\n      geoJSON: geoJSON\n    }]));\n  };\n\n  var deleteMission = function deleteMission(id) {\n    Axious.delete(\"http://localhost:3001/delete/\".concat(id)).then(function (response) {\n      alert(\"your mission is deleted\");\n    });\n  };\n\n  var updateName = function updateName(id) {\n    Axious.put(\"http://localhost:3001/update/\".concat(id), {\n      namaMisi: newMissionName,\n      id: id\n    }).then(function (response) {\n      setMissionList(missionList.map(function (val) {\n        return val.planId == id ? {\n          id: val.planId,\n          namaMisi: newMissionName\n        } : val;\n      }));\n    });\n  }; // const showGeoJson = (id) => {\n  //   Axious.get(`http://localhost:3001/${id}`).then((response) => {\n  //     setGeoJsonData(\n  //       geoJsonData.map((val) => {\n  //         return val.g3wp;\n  //       })\n  //     );\n  //   });\n  // };\n\n\n  var showGeoJson = function showGeoJson(id) {\n    Axious.post(\"http://localhost:3001/\".concat(id), {\n      geoJSON: geoJSON\n    });\n    setGeoJsonData([].concat(_toConsumableArray(geoJsonData), [{\n      geoJSON: geoJSON\n    }]));\n  }; // const saveToDatabase = (id) => {\n  //   let currentNamaMisi = { };\n  //   let namaMisi = prompt(\"Mission name: (empty means no change)\");\n  //   if(namaMisi === \" \"){\n  //     namaMisi = currentNamaMisi;\n  //   }\n  //   Axious.put(`http://localhost:3001/${id}`, {\n  //     currentNamaMisi: namaMisi,\n  //     id: id,\n  //     geoJSON: JSON.stringify(layerGroup.toGeoJSON()),\n  //   }, (data) => {\n  //     if(data=='OK'){\n  //       namaMisi = {val.planName}\n  //     }\n  //   });\n  // }\n  // const updateName = (id) => {\n  //   Axious.put(`http://localhost:3001/update/${id}/${newMissionName}`, {\n  //     namaMisi: newMissionName,\n  //     id: id,\n  //   }).then((response) => {\n  //     alert(\"your mission name is update\");\n  //   });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Head-comp\",\n            children: \"Ground Control Station\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Your Mission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Make your own mission plane by write down the mission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writemisi\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mission Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"namaMisi\",\n          onChange: function onChange(event) {\n            setNamaMisi(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"GeoJSON \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"geoJSON\",\n          onChange: function onChange(event) {\n            setGeoJSON(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createMission,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"or by draw it directly on the map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapstyle\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          children: /*#__PURE__*/_jsxDEV(FeatureGroup, {\n            children: /*#__PURE__*/_jsxDEV(EditControl, {\n              position: \"topright\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mission List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Here are your missions that have been created before\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"tabeldata\",\n        cellPadding: \"10\",\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Mission name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"GeoJSON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Rename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), missionList.map(function (val) {\n          return /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.planId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.planName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  ClassName: \"btntabel\",\n                  onClick: function onClick() {\n                    return showGeoJson(val.planId);\n                  },\n                  children: \"Show GeoJSON\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, _this), \";\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btntabel\",\n                  onClick: function onClick() {\n                    return deleteMission(val.planId);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"updateInput\",\n                  onChange: function onChange(e) {\n                    setNewMissionName(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 17\n                }, _this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btntabel\",\n                  onClick: function onClick(e) {\n                    return updateName(val.planName);\n                  },\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GF+QW6V8NpeO1eGHBQbvhtiGIRQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/My Program/Teammate/project/client/src/App.js"],"names":["Map","MyMap","useState","useEffect","Axious","LayerGroup","React","Link","FeatureGroup","EditControl","App","namaMisi","setNamaMisi","geoJSON","setGeoJSON","missionList","setMissionList","newMissionName","setNewMissionName","geoJsonData","setGeoJsonData","get","then","response","data","createMission","post","deleteMission","id","delete","alert","updateName","put","map","val","planId","showGeoJson","event","target","value","planName","e"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport Map from \"./components/maps\";\r\nimport MyMap from \"./components/viewMap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axious from \"../node_modules/axios\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { LayerGroup } from \"leaflet\";\r\nimport React from 'react'\r\nimport { Link } from \"@material-ui/core\";\r\nimport { FeatureGroup } from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\n\r\nfunction App() {\r\n  const [namaMisi, setNamaMisi] = useState(\"\");\r\n  const [geoJSON, setGeoJSON] = useState(\"\");\r\n  const [missionList, setMissionList] = useState([]);\r\n  const [newMissionName, setNewMissionName] = useState(\"\");\r\n  const [geoJsonData, setGeoJsonData] = useState([])(\"\");\r\n\r\n  useEffect(() => {\r\n    Axious.get(\"http://localhost:3001/\").then((response) => {\r\n      setMissionList(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const createMission = () => {\r\n    Axious.post(\"http://localhost:3001/\", {\r\n      namaMisi: namaMisi,\r\n      geoJSON: geoJSON,\r\n    });\r\n    setMissionList([...missionList, { namaMisi: namaMisi, geoJSON: geoJSON }]);\r\n  };\r\n\r\n  const deleteMission = (id) => {\r\n    Axious.delete(`http://localhost:3001/delete/${id}`).then((response) => {\r\n      alert(\"your mission is deleted\");\r\n    });\r\n  };\r\n\r\n  const updateName = (id) => {\r\n    Axious.put(`http://localhost:3001/update/${id}`, {\r\n      namaMisi: newMissionName,\r\n      id: id,\r\n    }).then((response) => {\r\n      setMissionList(\r\n        missionList.map((val) => {\r\n          return val.planId == id\r\n            ? {\r\n                id: val.planId,\r\n                namaMisi: newMissionName,\r\n              }\r\n            : val;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  // const showGeoJson = (id) => {\r\n  //   Axious.get(`http://localhost:3001/${id}`).then((response) => {\r\n  //     setGeoJsonData(\r\n  //       geoJsonData.map((val) => {\r\n  //         return val.g3wp;\r\n  //       })\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const showGeoJson = (id) => {\r\n    Axious.post(`http://localhost:3001/${id}`, {\r\n      geoJSON: geoJSON,\r\n    });\r\n    setGeoJsonData([...geoJsonData, { geoJSON: geoJSON }]);\r\n  };\r\n\r\n  // const saveToDatabase = (id) => {\r\n  //   let currentNamaMisi = { };\r\n  //   let namaMisi = prompt(\"Mission name: (empty means no change)\");\r\n  //   if(namaMisi === \" \"){\r\n  //     namaMisi = currentNamaMisi;\r\n  //   }\r\n  //   Axious.put(`http://localhost:3001/${id}`, {\r\n  //     currentNamaMisi: namaMisi,\r\n  //     id: id,\r\n  //     geoJSON: JSON.stringify(layerGroup.toGeoJSON()),\r\n  //   }, (data) => {\r\n  //     if(data=='OK'){\r\n  //       namaMisi = {val.planName}\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // const updateName = (id) => {\r\n  //   Axious.put(`http://localhost:3001/update/${id}/${newMissionName}`, {\r\n  //     namaMisi: newMissionName,\r\n  //     id: id,\r\n  //   }).then((response) => {\r\n  //     alert(\"your mission name is update\");\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <b>\r\n            <div className=\"Head-comp\">Ground Control Station</div>\r\n          </b>\r\n        </header>\r\n        <h1>Create Your Mission</h1>\r\n        <h4>Make your own mission plane by write down the mission</h4>\r\n        <div className=\"writemisi\">\r\n          <br/><label>Mission Name : </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"namaMisi\"\r\n            onChange={(event) => {\r\n              setNamaMisi(event.target.value);\r\n            }}\r\n          /><br/><br/>\r\n          <label>GeoJSON &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"geoJSON\"\r\n            onChange={(event) => {\r\n              setGeoJSON(event.target.value);\r\n            }}\r\n          /><br/><br/>\r\n        </div>\r\n        <br/><br/>\r\n        <button onClick={createMission}>Create</button>\r\n        <h4>or by draw it directly on the map</h4>\r\n        <div className=\"mapstyle\">\r\n          <Map>\r\n            <FeatureGroup>\r\n              <EditControl\r\n                position='topright'\r\n              />\r\n            </FeatureGroup>\r\n          </Map>\r\n        </div>        \r\n        <br/>\r\n\r\n        <h1>Mission List</h1>\r\n        <h4>Here are your missions that have been created before</h4>\r\n      \r\n        <table className=\"tabeldata\" cellPadding =\"10\" width=\"100%\">\r\n          <thead >\r\n            <tr>\r\n              <th scope=\"col\">id</th>\r\n              <th scope=\"col\">Mission name</th>\r\n              <th scope=\"col\">GeoJSON</th>\r\n              <th scope=\"col\">Delete</th>\r\n              <th scope=\"col\">Rename</th>\r\n            </tr>\r\n          </thead>\r\n          {missionList.map((val) => {\r\n            return (\r\n              <tbody>\r\n              <tr>\r\n              <td>{val.planId}</td>\r\n              <td>{val.planName}</td>\r\n              <td>\r\n                <button ClassName=\"btntabel\" onClick={() => showGeoJson(val.planId)}>Show GeoJSON</button>;\r\n              </td>\r\n              <td>\r\n                <button className=\"btntabel\" onClick={() => deleteMission(val.planId)}>Delete</button>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"updateInput\"\r\n                  onChange={(e) => {\r\n                    setNewMissionName(e.target.value);\r\n                  }}\r\n                />&nbsp;\r\n                <button className=\"btntabel\" onClick={(e) => updateName(val.planName)}>Rename</button>\r\n              </td>\r\n              </tr>\r\n            </tbody>\r\n            )           \r\n          })}\r\n        </table>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}